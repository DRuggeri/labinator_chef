START=$(date +%s)

<% @nodes.each do |nodename, n| %>
virsh destroy <%= nodename %>
virsh undefine <%= nodename %> --remove-all-storage
rm -f /var/lib/libvirt/systems/<%= nodename %>.qcow2

<% end %>




<% @nodes.each do |nodename, n| %>
qemu-img create -f qcow2 /var/lib/libvirt/systems/<%= nodename %>.qcow2 <%= n['disk'] %>G
virt-install --name "<%= nodename %>" \
  --vcpus <%= n['cpus'] %> \
  --memory <%= n['mem'] %> \
  --disk "size=<%= n['disk'] %>,backing_store=/var/lib/libvirt/systems/<%= nodename %>.qcow2,device=disk,bus=virtio" \
  --boot hd,network \
  --os-variant ubuntu22.10 \
  --graphics vnc,listen=0.0.0.0,password=pass,port=<%= n['vnc'] %> \
  --network network=default,model=virtio,mac=<%= n['mac'] %> \
  --noautoconsole \
  --import


<% end %>


########################
#                      #
#   Set up the nodes   #
#                      #
########################

while ! nc -z -w2 <%= @nodes['c1']['ip'] %> 50000;do
  echo "`date` - Waiting for talos on c1"
  sleep 5
done

echo "`date` - Bootstrapping c1"
while ! talosctl bootstrap --nodes <%= @nodes['c1']['ip'] %> --endpoints <%= @nodes['c1']['ip'] %>;do
  sleep 5
done

while ! nc -z -w2 <%= @nodes['c1']['ip'] %> 6443;do
  echo "`date` - <%= @nodes['c1']['ip'] %> - waiting for kubernetes API server to come up on c1"
  sleep 5
done

talosctl kubeconfig --nodes <%= @nodes['c1']['ip'] %> --endpoints <%= @nodes['c1']['ip'] %> --force --force-context-name koob
chmod 600 ~/.kube/config

END=$(date +%s)
DURATION=$(($END - $START))
echo "Completed in ${DURATION} seconds"