apiVersion: v1alpha1
kind: TrustedRootsConfig
name: boss-root
certificates: |-
<%= File.readlines('/etc/ssl/certs/root_ca.crt').map{|l| "  #{l}"}.join('') %>

---
machine:
  network:
    nameservers:
      - <%= @network['dns'] %>
    extraHostEntries:
<%- @nodes.each do |name,n| %>
      - ip: <%= n['ip'] %>
        aliases:
          - <%= name %>
          - <%= name %>.local
<% end %>
  features:
    hostDNS:
      enabled: true
      resolveMemberNames: true
  time:
    disabled: false
    servers:
      - <%= @network['ntp'] %>
#  kubelet:
#    extraArgs:
#      node-status-update-frequency: 4s
  registries:
    mirrors:
      docker.io:
        endpoints:
          - https://<%= @network['mirror_endpoint'] %>
      gcr.io:
        endpoints:
          - https://<%= @network['mirror_endpoint'] %>
      ghcr.io:
        endpoints:
          - https://<%= @network['mirror_endpoint'] %>
      registry.k8s.io:
        endpoints:
          - https://<%= @network['mirror_endpoint'] %>
      quay.k8s.io:
        endpoints:
          - https://<%= @network['mirror_endpoint'] %>
cluster:
  allowSchedulingOnControlPlanes: false
  discovery:
    enabled: false
    registries:
      kubernetes:
        disabled: true
      service:
        disabled: true
# This would make the network failure scenarios more responsive, but it causes
# the nodes to fail to register in the control plane on bootstrap. Talos bug?
#  controllerManager:
#    extraArgs:
#      node-monitor-period: 2s
#      node-monitor-grace-period: 10s
#      pod-eviction-timeout: 5s